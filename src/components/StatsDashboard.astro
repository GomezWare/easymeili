<div x-data="statsDashboardData" class="space-y-6">
  <!-- Header -->
  <div class="bg-gradient-to-br from-white to-gray-50 rounded-xl shadow-lg border border-gray-100 p-6">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
      <div>
        <h2 class="text-2xl sm:text-3xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">Dashboard de Estadísticas</h2>
        <p class="text-gray-500 mt-1 text-sm sm:text-base">Métricas y análisis de tu instancia de MeiliSearch</p>
      </div>
      <button @click="refreshStats()" class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors flex items-center space-x-2">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
        </svg>
        <span>Actualizar</span>
      </button>
    </div>
  </div>

  <!-- Loading state -->
  <div x-show="loading" class="text-center py-12">
    <div class="inline-block animate-spin rounded-full h-12 w-12 border-4 border-indigo-200 border-t-indigo-600"></div>
    <p class="mt-4 text-gray-600 font-medium">Cargando estadísticas...</p>
  </div>

  <!-- Error state -->
  <div x-show="error" class="bg-gradient-to-r from-red-50 to-pink-50 border border-red-200 rounded-xl p-6 shadow-sm">
    <div class="flex items-start">
      <div class="flex-shrink-0">
        <div class="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
          <svg class="h-6 w-6 text-red-500" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
      <div class="ml-4">
        <h3 class="text-lg font-semibold text-red-800">Error al cargar estadísticas</h3>
        <div class="mt-2 text-red-700">
          <p x-text="error"></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Stats Grid -->
  <div x-show="!loading && !error" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
    <!-- Total Indexes -->
    <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-shadow">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <div class="w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          </div>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-500">Total de Índices</p>
          <p class="text-2xl font-bold text-gray-900" x-text="stats.totalIndexes || 0"></p>
        </div>
      </div>
    </div>

    <!-- Total Documents -->
    <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-shadow">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          </div>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-500">Total de Documentos</p>
          <p class="text-2xl font-bold text-gray-900" x-text="formatNumber(stats.totalDocuments) || 0"></p>
        </div>
      </div>
    </div>

    <!-- Total Keys -->
    <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-shadow">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z" />
            </svg>
          </div>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-500">Claves de API</p>
          <p class="text-2xl font-bold text-gray-900" x-text="stats.totalKeys || 0"></p>
        </div>
      </div>
    </div>

    <!-- Database Size -->
    <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6 hover:shadow-xl transition-shadow">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4" />
            </svg>
          </div>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-500">Tamaño de BD</p>
          <p class="text-2xl font-bold text-gray-900" x-text="formatBytes(stats.databaseSize) || 'N/A'"></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Detailed Stats -->
  <div x-show="!loading && !error" class="flex justify-center">
    <div class="w-full max-w-2xl">
      <!-- Top Indexes by Documents -->
      <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Índices con más Documentos</h3>
        <div class="space-y-3">
          <template x-for="index in stats.topIndexes" :key="index.uid">
            <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
              <div class="flex items-center space-x-3">
                <div class="w-3 h-3 bg-indigo-500 rounded-full"></div>
                <span class="font-medium text-gray-700" x-text="index.uid"></span>
              </div>
              <span class="text-sm text-gray-500" x-text="`${formatNumber(index.totalDocuments)} docs`"></span>
            </div>
          </template>
          <div x-show="!stats.topIndexes || stats.topIndexes.length === 0" class="text-center py-4 text-gray-500">
            No hay índices disponibles
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- System Info -->
  <div x-show="!loading && !error" class="bg-white rounded-xl shadow-lg border border-gray-200 p-6">
    <h3 class="text-lg font-semibold text-gray-900 mb-4">Información del Sistema</h3>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
      <div class="p-4 bg-gray-50 rounded-lg">
        <p class="text-sm font-medium text-gray-500">Versión de MeiliSearch</p>
        <p class="text-lg font-semibold text-gray-900" x-text="stats.version || 'N/A'"></p>
      </div>
      <div class="p-4 bg-gray-50 rounded-lg">
        <p class="text-sm font-medium text-gray-500">Última Actualización</p>
        <p class="text-lg font-semibold text-gray-900" x-text="formatDate(stats.lastUpdate) || 'N/A'"></p>
      </div>
      <div class="p-4 bg-gray-50 rounded-lg">
        <p class="text-sm font-medium text-gray-500">Estado</p>
        <p class="text-lg font-semibold text-green-600" x-text="stats.status || 'Online'"></p>
      </div>
      <div class="p-4 bg-gray-50 rounded-lg">
        <p class="text-sm font-medium text-gray-500">Tiempo de Respuesta</p>
        <p class="text-lg font-semibold text-gray-900" x-text="`${stats.responseTime || 0}ms`"></p>
      </div>
    </div>
  </div>
</div>

<script>
  import Alpine from "alpinejs";

  interface Stats {
    totalIndexes: number;
    totalDocuments: number;
    totalKeys: number;
    databaseSize: number;
    topIndexes: Array<{uid: string; totalDocuments: number}>;
    version: string;
    lastUpdate: string;
    status: string;
    responseTime: number;
  }

  const statsDashboardData = () => ({
    stats: {} as Stats,
    loading: true,
    error: null as string | null,
    
    async init() {
      await this.loadStats();
    },
    
    async loadStats() {
      this.loading = true;
      this.error = null;
      
      try {
        const startTime = Date.now();
        const response = await fetch('/api/stats');
        const responseTime = Date.now() - startTime;
        
        if (!response.ok) {
          throw new Error(`Error ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        this.stats = {
          ...data,
          responseTime
        };
      } catch (err: unknown) {
        console.error('Error loading stats:', err);
        this.error = err instanceof Error ? err.message : 'Error al cargar las estadísticas';
      } finally {
        this.loading = false;
      }
    },
    
    async refreshStats() {
      await this.loadStats();
    },
    
    formatNumber(num: number): string {
      if (!num) return '0';
      return new Intl.NumberFormat('es-ES').format(num);
    },
    
    formatBytes(bytes: number): string {
      if (!bytes) return 'N/A';
      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
      const i = Math.floor(Math.log(bytes) / Math.log(1024));
      return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];
    },
    
    formatDate(dateString: string): string {
      if (!dateString) return 'N/A';
      try {
        const date = new Date(dateString);
        if (isNaN(date.getTime())) {
          return 'Fecha inválida';
        }
        return date.toLocaleDateString('es-ES', {
          year: 'numeric',
          month: '2-digit',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit'
        });
      } catch (error) {
        return 'Fecha inválida';
      }
    }
  });

  Alpine.data('statsDashboardData', statsDashboardData);
</script> 